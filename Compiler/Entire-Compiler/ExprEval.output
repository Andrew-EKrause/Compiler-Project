Grammar

    0 $accept: Prog $end

    1 Prog: Declarations StmtSeq

    2 Declarations: Dec Declarations
    3             | ε

    4 $@1: ε

    5 Dec: Int Ident $@1 ';'

    6 StmtSeq: Stmt StmtSeq
    7        | ε

    8 Stmt: Write '(' ExprL0 ')' ';'
    9     | Read '(' IdentList ')' ';'
   10     | IF '(' ExprL0 ')' '{' StmtSeq '}'
   11     | AssnmtStmt ';'

   12 AssnmtStmt: Id '=' ExprL0

   13 ExprL0: ExprL0 OR ExprL1
   14       | ExprL0 AND ExprL1
   15       | ExprL1

   16 ExprL1: '!' ExprL2
   17       | ExprL2

   18 ExprL2: ExprL2 NOT_EQ ExprL3
   19       | ExprL2 EQ ExprL3
   20       | ExprL2 LT_OR_EQ ExprL3
   21       | ExprL2 GT_OR_EQ ExprL3
   22       | ExprL2 LT ExprL3
   23       | ExprL2 GT ExprL3
   24       | ExprL3

   25 ExprL3: ExprL3 '+' ExprL4
   26       | ExprL3 '-' ExprL4
   27       | ExprL4

   28 ExprL4: ExprL4 '*' ExprL5
   29       | ExprL4 '/' ExprL5
   30       | ExprL4 '%' ExprL5
   31       | ExprL5

   32 ExprL5: ExprL6 '^' ExprL5
   33       | ExprL6

   34 ExprL6: '(' ExprL0 ')'
   35       | ExprL7

   36 ExprL7: '-' ExprL6
   37       | IntLit
   38       | Ident

   39 IdentList: Id ',' IdentList
   40          | Id

   41 Id: Ident


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 16
    '%' (37) 30
    '(' (40) 8 9 10 34
    ')' (41) 8 9 10 34
    '*' (42) 28
    '+' (43) 25
    ',' (44) 39
    '-' (45) 26 36
    '/' (47) 29
    ';' (59) 5 8 9 11
    '=' (61) 12
    '^' (94) 32
    '{' (123) 10
    '}' (125) 10
    error (256)
    Ident (258) 5 38 41
    IntLit (259) 37
    Int (260) 5
    Write (261) 8
    IF (262) 10
    EQ (263) 19
    NOT_EQ (264) 18
    LT_OR_EQ (265) 20
    GT_OR_EQ (266) 21
    LT (267) 22
    GT (268) 23
    OR (269) 13
    AND (270) 14
    Read (271) 9


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    Prog (32)
        on left: 1
        on right: 0
    Declarations (33)
        on left: 2 3
        on right: 1 2
    Dec (34)
        on left: 5
        on right: 2
    $@1 (35)
        on left: 4
        on right: 5
    StmtSeq <InstrSeq> (36)
        on left: 6 7
        on right: 1 6 10
    Stmt <InstrSeq> (37)
        on left: 8 9 10 11
        on right: 6
    AssnmtStmt <InstrSeq> (38)
        on left: 12
        on right: 11
    ExprL0 <ExprRes> (39)
        on left: 13 14 15
        on right: 8 10 12 13 14 34
    ExprL1 <ExprRes> (40)
        on left: 16 17
        on right: 13 14 15
    ExprL2 <ExprRes> (41)
        on left: 18 19 20 21 22 23 24
        on right: 16 17 18 19 20 21 22 23
    ExprL3 <ExprRes> (42)
        on left: 25 26 27
        on right: 18 19 20 21 22 23 24 25 26
    ExprL4 <ExprRes> (43)
        on left: 28 29 30 31
        on right: 25 26 27 28 29 30
    ExprL5 <ExprRes> (44)
        on left: 32 33
        on right: 28 29 30 31 32
    ExprL6 <ExprRes> (45)
        on left: 34 35
        on right: 32 33 36
    ExprL7 <ExprRes> (46)
        on left: 36 37 38
        on right: 35
    IdentList <IdList> (47)
        on left: 39 40
        on right: 9 39
    Id <string> (48)
        on left: 41
        on right: 12 39 40


State 0

    0 $accept: • Prog $end

    Int  shift, and go to state 1

    $default  reduce using rule 3 (Declarations)

    Prog          go to state 2
    Declarations  go to state 3
    Dec           go to state 4


State 1

    5 Dec: Int • Ident $@1 ';'

    Ident  shift, and go to state 5


State 2

    0 $accept: Prog • $end

    $end  shift, and go to state 6


State 3

    1 Prog: Declarations • StmtSeq

    Ident  shift, and go to state 7
    Write  shift, and go to state 8
    IF     shift, and go to state 9
    Read   shift, and go to state 10

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq     go to state 11
    Stmt        go to state 12
    AssnmtStmt  go to state 13
    Id          go to state 14


State 4

    2 Declarations: Dec • Declarations

    Int  shift, and go to state 1

    $default  reduce using rule 3 (Declarations)

    Declarations  go to state 15
    Dec           go to state 4


State 5

    5 Dec: Int Ident • $@1 ';'

    $default  reduce using rule 4 ($@1)

    $@1  go to state 16


State 6

    0 $accept: Prog $end •

    $default  accept


State 7

   41 Id: Ident •

    $default  reduce using rule 41 (Id)


State 8

    8 Stmt: Write • '(' ExprL0 ')' ';'

    '('  shift, and go to state 17


State 9

   10 Stmt: IF • '(' ExprL0 ')' '{' StmtSeq '}'

    '('  shift, and go to state 18


State 10

    9 Stmt: Read • '(' IdentList ')' ';'

    '('  shift, and go to state 19


State 11

    1 Prog: Declarations StmtSeq •

    $default  reduce using rule 1 (Prog)


State 12

    6 StmtSeq: Stmt • StmtSeq

    Ident  shift, and go to state 7
    Write  shift, and go to state 8
    IF     shift, and go to state 9
    Read   shift, and go to state 10

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq     go to state 20
    Stmt        go to state 12
    AssnmtStmt  go to state 13
    Id          go to state 14


State 13

   11 Stmt: AssnmtStmt • ';'

    ';'  shift, and go to state 21


State 14

   12 AssnmtStmt: Id • '=' ExprL0

    '='  shift, and go to state 22


State 15

    2 Declarations: Dec Declarations •

    $default  reduce using rule 2 (Declarations)


State 16

    5 Dec: Int Ident $@1 • ';'

    ';'  shift, and go to state 23


State 17

    8 Stmt: Write '(' • ExprL0 ')' ';'

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '!'     shift, and go to state 27
    '-'     shift, and go to state 28

    ExprL0  go to state 29
    ExprL1  go to state 30
    ExprL2  go to state 31
    ExprL3  go to state 32
    ExprL4  go to state 33
    ExprL5  go to state 34
    ExprL6  go to state 35
    ExprL7  go to state 36


State 18

   10 Stmt: IF '(' • ExprL0 ')' '{' StmtSeq '}'

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '!'     shift, and go to state 27
    '-'     shift, and go to state 28

    ExprL0  go to state 37
    ExprL1  go to state 30
    ExprL2  go to state 31
    ExprL3  go to state 32
    ExprL4  go to state 33
    ExprL5  go to state 34
    ExprL6  go to state 35
    ExprL7  go to state 36


State 19

    9 Stmt: Read '(' • IdentList ')' ';'

    Ident  shift, and go to state 7

    IdentList  go to state 38
    Id         go to state 39


State 20

    6 StmtSeq: Stmt StmtSeq •

    $default  reduce using rule 6 (StmtSeq)


State 21

   11 Stmt: AssnmtStmt ';' •

    $default  reduce using rule 11 (Stmt)


State 22

   12 AssnmtStmt: Id '=' • ExprL0

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '!'     shift, and go to state 27
    '-'     shift, and go to state 28

    ExprL0  go to state 40
    ExprL1  go to state 30
    ExprL2  go to state 31
    ExprL3  go to state 32
    ExprL4  go to state 33
    ExprL5  go to state 34
    ExprL6  go to state 35
    ExprL7  go to state 36


State 23

    5 Dec: Int Ident $@1 ';' •

    $default  reduce using rule 5 (Dec)


State 24

   38 ExprL7: Ident •

    $default  reduce using rule 38 (ExprL7)


State 25

   37 ExprL7: IntLit •

    $default  reduce using rule 37 (ExprL7)


State 26

   34 ExprL6: '(' • ExprL0 ')'

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '!'     shift, and go to state 27
    '-'     shift, and go to state 28

    ExprL0  go to state 41
    ExprL1  go to state 30
    ExprL2  go to state 31
    ExprL3  go to state 32
    ExprL4  go to state 33
    ExprL5  go to state 34
    ExprL6  go to state 35
    ExprL7  go to state 36


State 27

   16 ExprL1: '!' • ExprL2

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '-'     shift, and go to state 28

    ExprL2  go to state 42
    ExprL3  go to state 32
    ExprL4  go to state 33
    ExprL5  go to state 34
    ExprL6  go to state 35
    ExprL7  go to state 36


State 28

   36 ExprL7: '-' • ExprL6

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '-'     shift, and go to state 28

    ExprL6  go to state 43
    ExprL7  go to state 36


State 29

    8 Stmt: Write '(' ExprL0 • ')' ';'
   13 ExprL0: ExprL0 • OR ExprL1
   14       | ExprL0 • AND ExprL1

    OR   shift, and go to state 44
    AND  shift, and go to state 45
    ')'  shift, and go to state 46


State 30

   15 ExprL0: ExprL1 •

    $default  reduce using rule 15 (ExprL0)


State 31

   17 ExprL1: ExprL2 •
   18 ExprL2: ExprL2 • NOT_EQ ExprL3
   19       | ExprL2 • EQ ExprL3
   20       | ExprL2 • LT_OR_EQ ExprL3
   21       | ExprL2 • GT_OR_EQ ExprL3
   22       | ExprL2 • LT ExprL3
   23       | ExprL2 • GT ExprL3

    EQ        shift, and go to state 47
    NOT_EQ    shift, and go to state 48
    LT_OR_EQ  shift, and go to state 49
    GT_OR_EQ  shift, and go to state 50
    LT        shift, and go to state 51
    GT        shift, and go to state 52

    $default  reduce using rule 17 (ExprL1)


State 32

   24 ExprL2: ExprL3 •
   25 ExprL3: ExprL3 • '+' ExprL4
   26       | ExprL3 • '-' ExprL4

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 24 (ExprL2)


State 33

   27 ExprL3: ExprL4 •
   28 ExprL4: ExprL4 • '*' ExprL5
   29       | ExprL4 • '/' ExprL5
   30       | ExprL4 • '%' ExprL5

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '%'  shift, and go to state 57

    $default  reduce using rule 27 (ExprL3)


State 34

   31 ExprL4: ExprL5 •

    $default  reduce using rule 31 (ExprL4)


State 35

   32 ExprL5: ExprL6 • '^' ExprL5
   33       | ExprL6 •

    '^'  shift, and go to state 58

    $default  reduce using rule 33 (ExprL5)


State 36

   35 ExprL6: ExprL7 •

    $default  reduce using rule 35 (ExprL6)


State 37

   10 Stmt: IF '(' ExprL0 • ')' '{' StmtSeq '}'
   13 ExprL0: ExprL0 • OR ExprL1
   14       | ExprL0 • AND ExprL1

    OR   shift, and go to state 44
    AND  shift, and go to state 45
    ')'  shift, and go to state 59


State 38

    9 Stmt: Read '(' IdentList • ')' ';'

    ')'  shift, and go to state 60


State 39

   39 IdentList: Id • ',' IdentList
   40          | Id •

    ','  shift, and go to state 61

    $default  reduce using rule 40 (IdentList)


State 40

   12 AssnmtStmt: Id '=' ExprL0 •
   13 ExprL0: ExprL0 • OR ExprL1
   14       | ExprL0 • AND ExprL1

    OR   shift, and go to state 44
    AND  shift, and go to state 45

    $default  reduce using rule 12 (AssnmtStmt)


State 41

   13 ExprL0: ExprL0 • OR ExprL1
   14       | ExprL0 • AND ExprL1
   34 ExprL6: '(' ExprL0 • ')'

    OR   shift, and go to state 44
    AND  shift, and go to state 45
    ')'  shift, and go to state 62


State 42

   16 ExprL1: '!' ExprL2 •
   18 ExprL2: ExprL2 • NOT_EQ ExprL3
   19       | ExprL2 • EQ ExprL3
   20       | ExprL2 • LT_OR_EQ ExprL3
   21       | ExprL2 • GT_OR_EQ ExprL3
   22       | ExprL2 • LT ExprL3
   23       | ExprL2 • GT ExprL3

    EQ        shift, and go to state 47
    NOT_EQ    shift, and go to state 48
    LT_OR_EQ  shift, and go to state 49
    GT_OR_EQ  shift, and go to state 50
    LT        shift, and go to state 51
    GT        shift, and go to state 52

    $default  reduce using rule 16 (ExprL1)


State 43

   36 ExprL7: '-' ExprL6 •

    $default  reduce using rule 36 (ExprL7)


State 44

   13 ExprL0: ExprL0 OR • ExprL1

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '!'     shift, and go to state 27
    '-'     shift, and go to state 28

    ExprL1  go to state 63
    ExprL2  go to state 31
    ExprL3  go to state 32
    ExprL4  go to state 33
    ExprL5  go to state 34
    ExprL6  go to state 35
    ExprL7  go to state 36


State 45

   14 ExprL0: ExprL0 AND • ExprL1

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '!'     shift, and go to state 27
    '-'     shift, and go to state 28

    ExprL1  go to state 64
    ExprL2  go to state 31
    ExprL3  go to state 32
    ExprL4  go to state 33
    ExprL5  go to state 34
    ExprL6  go to state 35
    ExprL7  go to state 36


State 46

    8 Stmt: Write '(' ExprL0 ')' • ';'

    ';'  shift, and go to state 65


State 47

   19 ExprL2: ExprL2 EQ • ExprL3

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '-'     shift, and go to state 28

    ExprL3  go to state 66
    ExprL4  go to state 33
    ExprL5  go to state 34
    ExprL6  go to state 35
    ExprL7  go to state 36


State 48

   18 ExprL2: ExprL2 NOT_EQ • ExprL3

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '-'     shift, and go to state 28

    ExprL3  go to state 67
    ExprL4  go to state 33
    ExprL5  go to state 34
    ExprL6  go to state 35
    ExprL7  go to state 36


State 49

   20 ExprL2: ExprL2 LT_OR_EQ • ExprL3

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '-'     shift, and go to state 28

    ExprL3  go to state 68
    ExprL4  go to state 33
    ExprL5  go to state 34
    ExprL6  go to state 35
    ExprL7  go to state 36


State 50

   21 ExprL2: ExprL2 GT_OR_EQ • ExprL3

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '-'     shift, and go to state 28

    ExprL3  go to state 69
    ExprL4  go to state 33
    ExprL5  go to state 34
    ExprL6  go to state 35
    ExprL7  go to state 36


State 51

   22 ExprL2: ExprL2 LT • ExprL3

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '-'     shift, and go to state 28

    ExprL3  go to state 70
    ExprL4  go to state 33
    ExprL5  go to state 34
    ExprL6  go to state 35
    ExprL7  go to state 36


State 52

   23 ExprL2: ExprL2 GT • ExprL3

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '-'     shift, and go to state 28

    ExprL3  go to state 71
    ExprL4  go to state 33
    ExprL5  go to state 34
    ExprL6  go to state 35
    ExprL7  go to state 36


State 53

   25 ExprL3: ExprL3 '+' • ExprL4

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '-'     shift, and go to state 28

    ExprL4  go to state 72
    ExprL5  go to state 34
    ExprL6  go to state 35
    ExprL7  go to state 36


State 54

   26 ExprL3: ExprL3 '-' • ExprL4

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '-'     shift, and go to state 28

    ExprL4  go to state 73
    ExprL5  go to state 34
    ExprL6  go to state 35
    ExprL7  go to state 36


State 55

   28 ExprL4: ExprL4 '*' • ExprL5

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '-'     shift, and go to state 28

    ExprL5  go to state 74
    ExprL6  go to state 35
    ExprL7  go to state 36


State 56

   29 ExprL4: ExprL4 '/' • ExprL5

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '-'     shift, and go to state 28

    ExprL5  go to state 75
    ExprL6  go to state 35
    ExprL7  go to state 36


State 57

   30 ExprL4: ExprL4 '%' • ExprL5

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '-'     shift, and go to state 28

    ExprL5  go to state 76
    ExprL6  go to state 35
    ExprL7  go to state 36


State 58

   32 ExprL5: ExprL6 '^' • ExprL5

    Ident   shift, and go to state 24
    IntLit  shift, and go to state 25
    '('     shift, and go to state 26
    '-'     shift, and go to state 28

    ExprL5  go to state 77
    ExprL6  go to state 35
    ExprL7  go to state 36


State 59

   10 Stmt: IF '(' ExprL0 ')' • '{' StmtSeq '}'

    '{'  shift, and go to state 78


State 60

    9 Stmt: Read '(' IdentList ')' • ';'

    ';'  shift, and go to state 79


State 61

   39 IdentList: Id ',' • IdentList

    Ident  shift, and go to state 7

    IdentList  go to state 80
    Id         go to state 39


State 62

   34 ExprL6: '(' ExprL0 ')' •

    $default  reduce using rule 34 (ExprL6)


State 63

   13 ExprL0: ExprL0 OR ExprL1 •

    $default  reduce using rule 13 (ExprL0)


State 64

   14 ExprL0: ExprL0 AND ExprL1 •

    $default  reduce using rule 14 (ExprL0)


State 65

    8 Stmt: Write '(' ExprL0 ')' ';' •

    $default  reduce using rule 8 (Stmt)


State 66

   19 ExprL2: ExprL2 EQ ExprL3 •
   25 ExprL3: ExprL3 • '+' ExprL4
   26       | ExprL3 • '-' ExprL4

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 19 (ExprL2)


State 67

   18 ExprL2: ExprL2 NOT_EQ ExprL3 •
   25 ExprL3: ExprL3 • '+' ExprL4
   26       | ExprL3 • '-' ExprL4

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 18 (ExprL2)


State 68

   20 ExprL2: ExprL2 LT_OR_EQ ExprL3 •
   25 ExprL3: ExprL3 • '+' ExprL4
   26       | ExprL3 • '-' ExprL4

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 20 (ExprL2)


State 69

   21 ExprL2: ExprL2 GT_OR_EQ ExprL3 •
   25 ExprL3: ExprL3 • '+' ExprL4
   26       | ExprL3 • '-' ExprL4

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 21 (ExprL2)


State 70

   22 ExprL2: ExprL2 LT ExprL3 •
   25 ExprL3: ExprL3 • '+' ExprL4
   26       | ExprL3 • '-' ExprL4

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 22 (ExprL2)


State 71

   23 ExprL2: ExprL2 GT ExprL3 •
   25 ExprL3: ExprL3 • '+' ExprL4
   26       | ExprL3 • '-' ExprL4

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 23 (ExprL2)


State 72

   25 ExprL3: ExprL3 '+' ExprL4 •
   28 ExprL4: ExprL4 • '*' ExprL5
   29       | ExprL4 • '/' ExprL5
   30       | ExprL4 • '%' ExprL5

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '%'  shift, and go to state 57

    $default  reduce using rule 25 (ExprL3)


State 73

   26 ExprL3: ExprL3 '-' ExprL4 •
   28 ExprL4: ExprL4 • '*' ExprL5
   29       | ExprL4 • '/' ExprL5
   30       | ExprL4 • '%' ExprL5

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '%'  shift, and go to state 57

    $default  reduce using rule 26 (ExprL3)


State 74

   28 ExprL4: ExprL4 '*' ExprL5 •

    $default  reduce using rule 28 (ExprL4)


State 75

   29 ExprL4: ExprL4 '/' ExprL5 •

    $default  reduce using rule 29 (ExprL4)


State 76

   30 ExprL4: ExprL4 '%' ExprL5 •

    $default  reduce using rule 30 (ExprL4)


State 77

   32 ExprL5: ExprL6 '^' ExprL5 •

    $default  reduce using rule 32 (ExprL5)


State 78

   10 Stmt: IF '(' ExprL0 ')' '{' • StmtSeq '}'

    Ident  shift, and go to state 7
    Write  shift, and go to state 8
    IF     shift, and go to state 9
    Read   shift, and go to state 10

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq     go to state 81
    Stmt        go to state 12
    AssnmtStmt  go to state 13
    Id          go to state 14


State 79

    9 Stmt: Read '(' IdentList ')' ';' •

    $default  reduce using rule 9 (Stmt)


State 80

   39 IdentList: Id ',' IdentList •

    $default  reduce using rule 39 (IdentList)


State 81

   10 Stmt: IF '(' ExprL0 ')' '{' StmtSeq • '}'

    '}'  shift, and go to state 82


State 82

   10 Stmt: IF '(' ExprL0 ')' '{' StmtSeq '}' •

    $default  reduce using rule 10 (Stmt)
