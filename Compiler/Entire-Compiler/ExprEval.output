Grammar

    0 $accept: Prog $end

    1 Prog: Declarations StmtSeq

    2 Declarations: Dec Declarations
    3             | ε

    4 $@1: ε

    5 Dec: Int Ident $@1 ';'

    6 StmtSeq: Stmt StmtSeq
    7        | ε

    8 Stmt: Write '(' ExprL0 ')' ';'
    9     | IF '(' ExprL0 ')' '{' StmtSeq '}'
   10     | AssnmtStmt ';'

   11 AssnmtStmt: Id '=' ExprL0

   12 ExprL0: '!' ExprL1
   13       | ExprL0 OR ExprL1
   14       | ExprL0 AND ExprL1
   15       | ExprL0 EQ ExprL1
   16       | ExprL0 NOT_EQ ExprL1
   17       | ExprL0 LT_OR_EQ ExprL1
   18       | ExprL0 GT_OR_EQ ExprL1
   19       | ExprL0 LT ExprL1
   20       | ExprL0 GT ExprL1
   21       | ExprL1

   22 ExprL1: ExprL1 '+' ExprL2
   23       | ExprL1 '-' ExprL2
   24       | ExprL2

   25 ExprL2: ExprL2 '*' ExprL3
   26       | ExprL2 '/' ExprL3
   27       | ExprL2 '%' ExprL3
   28       | ExprL2 '^' ExprL3
   29       | ExprL3

   30 ExprL3: '(' ExprL3 ')'
   31       | IntLit
   32       | '-' IntLit
   33       | Ident

   34 Id: Ident


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 12
    '%' (37) 27
    '(' (40) 8 9 30
    ')' (41) 8 9 30
    '*' (42) 25
    '+' (43) 22
    '-' (45) 23 32
    '/' (47) 26
    ';' (59) 5 8 10
    '=' (61) 11
    '^' (94) 28
    '{' (123) 9
    '}' (125) 9
    error (256)
    Ident (258) 5 33 34
    IntLit (259) 31 32
    Int (260) 5
    Write (261) 8
    IF (262) 9
    EQ (263) 15
    NOT_EQ (264) 16
    LT_OR_EQ (265) 17
    GT_OR_EQ (266) 18
    LT (267) 19
    GT (268) 20
    OR (269) 13
    AND (270) 14


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    Prog (30)
        on left: 1
        on right: 0
    Declarations (31)
        on left: 2 3
        on right: 1 2
    Dec (32)
        on left: 5
        on right: 2
    $@1 (33)
        on left: 4
        on right: 5
    StmtSeq <InstrSeq> (34)
        on left: 6 7
        on right: 1 6 9
    Stmt <InstrSeq> (35)
        on left: 8 9 10
        on right: 6
    AssnmtStmt <InstrSeq> (36)
        on left: 11
        on right: 10
    ExprL0 <ExprRes> (37)
        on left: 12 13 14 15 16 17 18 19 20 21
        on right: 8 9 11 13 14 15 16 17 18 19 20
    ExprL1 <ExprRes> (38)
        on left: 22 23 24
        on right: 12 13 14 15 16 17 18 19 20 21 22 23
    ExprL2 <ExprRes> (39)
        on left: 25 26 27 28 29
        on right: 22 23 24 25 26 27 28
    ExprL3 <ExprRes> (40)
        on left: 30 31 32 33
        on right: 25 26 27 28 29 30
    Id <string> (41)
        on left: 34
        on right: 11


State 0

    0 $accept: • Prog $end

    Int  shift, and go to state 1

    $default  reduce using rule 3 (Declarations)

    Prog          go to state 2
    Declarations  go to state 3
    Dec           go to state 4


State 1

    5 Dec: Int • Ident $@1 ';'

    Ident  shift, and go to state 5


State 2

    0 $accept: Prog • $end

    $end  shift, and go to state 6


State 3

    1 Prog: Declarations • StmtSeq

    Ident  shift, and go to state 7
    Write  shift, and go to state 8
    IF     shift, and go to state 9

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq     go to state 10
    Stmt        go to state 11
    AssnmtStmt  go to state 12
    Id          go to state 13


State 4

    2 Declarations: Dec • Declarations

    Int  shift, and go to state 1

    $default  reduce using rule 3 (Declarations)

    Declarations  go to state 14
    Dec           go to state 4


State 5

    5 Dec: Int Ident • $@1 ';'

    $default  reduce using rule 4 ($@1)

    $@1  go to state 15


State 6

    0 $accept: Prog $end •

    $default  accept


State 7

   34 Id: Ident •

    $default  reduce using rule 34 (Id)


State 8

    8 Stmt: Write • '(' ExprL0 ')' ';'

    '('  shift, and go to state 16


State 9

    9 Stmt: IF • '(' ExprL0 ')' '{' StmtSeq '}'

    '('  shift, and go to state 17


State 10

    1 Prog: Declarations StmtSeq •

    $default  reduce using rule 1 (Prog)


State 11

    6 StmtSeq: Stmt • StmtSeq

    Ident  shift, and go to state 7
    Write  shift, and go to state 8
    IF     shift, and go to state 9

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq     go to state 18
    Stmt        go to state 11
    AssnmtStmt  go to state 12
    Id          go to state 13


State 12

   10 Stmt: AssnmtStmt • ';'

    ';'  shift, and go to state 19


State 13

   11 AssnmtStmt: Id • '=' ExprL0

    '='  shift, and go to state 20


State 14

    2 Declarations: Dec Declarations •

    $default  reduce using rule 2 (Declarations)


State 15

    5 Dec: Int Ident $@1 • ';'

    ';'  shift, and go to state 21


State 16

    8 Stmt: Write '(' • ExprL0 ')' ';'

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '!'     shift, and go to state 25
    '-'     shift, and go to state 26

    ExprL0  go to state 27
    ExprL1  go to state 28
    ExprL2  go to state 29
    ExprL3  go to state 30


State 17

    9 Stmt: IF '(' • ExprL0 ')' '{' StmtSeq '}'

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '!'     shift, and go to state 25
    '-'     shift, and go to state 26

    ExprL0  go to state 31
    ExprL1  go to state 28
    ExprL2  go to state 29
    ExprL3  go to state 30


State 18

    6 StmtSeq: Stmt StmtSeq •

    $default  reduce using rule 6 (StmtSeq)


State 19

   10 Stmt: AssnmtStmt ';' •

    $default  reduce using rule 10 (Stmt)


State 20

   11 AssnmtStmt: Id '=' • ExprL0

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '!'     shift, and go to state 25
    '-'     shift, and go to state 26

    ExprL0  go to state 32
    ExprL1  go to state 28
    ExprL2  go to state 29
    ExprL3  go to state 30


State 21

    5 Dec: Int Ident $@1 ';' •

    $default  reduce using rule 5 (Dec)


State 22

   33 ExprL3: Ident •

    $default  reduce using rule 33 (ExprL3)


State 23

   31 ExprL3: IntLit •

    $default  reduce using rule 31 (ExprL3)


State 24

   30 ExprL3: '(' • ExprL3 ')'

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL3  go to state 33


State 25

   12 ExprL0: '!' • ExprL1

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL1  go to state 34
    ExprL2  go to state 29
    ExprL3  go to state 30


State 26

   32 ExprL3: '-' • IntLit

    IntLit  shift, and go to state 35


State 27

    8 Stmt: Write '(' ExprL0 • ')' ';'
   13 ExprL0: ExprL0 • OR ExprL1
   14       | ExprL0 • AND ExprL1
   15       | ExprL0 • EQ ExprL1
   16       | ExprL0 • NOT_EQ ExprL1
   17       | ExprL0 • LT_OR_EQ ExprL1
   18       | ExprL0 • GT_OR_EQ ExprL1
   19       | ExprL0 • LT ExprL1
   20       | ExprL0 • GT ExprL1

    EQ        shift, and go to state 36
    NOT_EQ    shift, and go to state 37
    LT_OR_EQ  shift, and go to state 38
    GT_OR_EQ  shift, and go to state 39
    LT        shift, and go to state 40
    GT        shift, and go to state 41
    OR        shift, and go to state 42
    AND       shift, and go to state 43
    ')'       shift, and go to state 44


State 28

   21 ExprL0: ExprL1 •
   22 ExprL1: ExprL1 • '+' ExprL2
   23       | ExprL1 • '-' ExprL2

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 21 (ExprL0)


State 29

   24 ExprL1: ExprL2 •
   25 ExprL2: ExprL2 • '*' ExprL3
   26       | ExprL2 • '/' ExprL3
   27       | ExprL2 • '%' ExprL3
   28       | ExprL2 • '^' ExprL3

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49
    '^'  shift, and go to state 50

    $default  reduce using rule 24 (ExprL1)


State 30

   29 ExprL2: ExprL3 •

    $default  reduce using rule 29 (ExprL2)


State 31

    9 Stmt: IF '(' ExprL0 • ')' '{' StmtSeq '}'
   13 ExprL0: ExprL0 • OR ExprL1
   14       | ExprL0 • AND ExprL1
   15       | ExprL0 • EQ ExprL1
   16       | ExprL0 • NOT_EQ ExprL1
   17       | ExprL0 • LT_OR_EQ ExprL1
   18       | ExprL0 • GT_OR_EQ ExprL1
   19       | ExprL0 • LT ExprL1
   20       | ExprL0 • GT ExprL1

    EQ        shift, and go to state 36
    NOT_EQ    shift, and go to state 37
    LT_OR_EQ  shift, and go to state 38
    GT_OR_EQ  shift, and go to state 39
    LT        shift, and go to state 40
    GT        shift, and go to state 41
    OR        shift, and go to state 42
    AND       shift, and go to state 43
    ')'       shift, and go to state 51


State 32

   11 AssnmtStmt: Id '=' ExprL0 •
   13 ExprL0: ExprL0 • OR ExprL1
   14       | ExprL0 • AND ExprL1
   15       | ExprL0 • EQ ExprL1
   16       | ExprL0 • NOT_EQ ExprL1
   17       | ExprL0 • LT_OR_EQ ExprL1
   18       | ExprL0 • GT_OR_EQ ExprL1
   19       | ExprL0 • LT ExprL1
   20       | ExprL0 • GT ExprL1

    EQ        shift, and go to state 36
    NOT_EQ    shift, and go to state 37
    LT_OR_EQ  shift, and go to state 38
    GT_OR_EQ  shift, and go to state 39
    LT        shift, and go to state 40
    GT        shift, and go to state 41
    OR        shift, and go to state 42
    AND       shift, and go to state 43

    $default  reduce using rule 11 (AssnmtStmt)


State 33

   30 ExprL3: '(' ExprL3 • ')'

    ')'  shift, and go to state 52


State 34

   12 ExprL0: '!' ExprL1 •
   22 ExprL1: ExprL1 • '+' ExprL2
   23       | ExprL1 • '-' ExprL2

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 12 (ExprL0)


State 35

   32 ExprL3: '-' IntLit •

    $default  reduce using rule 32 (ExprL3)


State 36

   15 ExprL0: ExprL0 EQ • ExprL1

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL1  go to state 53
    ExprL2  go to state 29
    ExprL3  go to state 30


State 37

   16 ExprL0: ExprL0 NOT_EQ • ExprL1

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL1  go to state 54
    ExprL2  go to state 29
    ExprL3  go to state 30


State 38

   17 ExprL0: ExprL0 LT_OR_EQ • ExprL1

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL1  go to state 55
    ExprL2  go to state 29
    ExprL3  go to state 30


State 39

   18 ExprL0: ExprL0 GT_OR_EQ • ExprL1

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL1  go to state 56
    ExprL2  go to state 29
    ExprL3  go to state 30


State 40

   19 ExprL0: ExprL0 LT • ExprL1

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL1  go to state 57
    ExprL2  go to state 29
    ExprL3  go to state 30


State 41

   20 ExprL0: ExprL0 GT • ExprL1

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL1  go to state 58
    ExprL2  go to state 29
    ExprL3  go to state 30


State 42

   13 ExprL0: ExprL0 OR • ExprL1

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL1  go to state 59
    ExprL2  go to state 29
    ExprL3  go to state 30


State 43

   14 ExprL0: ExprL0 AND • ExprL1

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL1  go to state 60
    ExprL2  go to state 29
    ExprL3  go to state 30


State 44

    8 Stmt: Write '(' ExprL0 ')' • ';'

    ';'  shift, and go to state 61


State 45

   22 ExprL1: ExprL1 '+' • ExprL2

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL2  go to state 62
    ExprL3  go to state 30


State 46

   23 ExprL1: ExprL1 '-' • ExprL2

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL2  go to state 63
    ExprL3  go to state 30


State 47

   25 ExprL2: ExprL2 '*' • ExprL3

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL3  go to state 64


State 48

   26 ExprL2: ExprL2 '/' • ExprL3

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL3  go to state 65


State 49

   27 ExprL2: ExprL2 '%' • ExprL3

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL3  go to state 66


State 50

   28 ExprL2: ExprL2 '^' • ExprL3

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL3  go to state 67


State 51

    9 Stmt: IF '(' ExprL0 ')' • '{' StmtSeq '}'

    '{'  shift, and go to state 68


State 52

   30 ExprL3: '(' ExprL3 ')' •

    $default  reduce using rule 30 (ExprL3)


State 53

   15 ExprL0: ExprL0 EQ ExprL1 •
   22 ExprL1: ExprL1 • '+' ExprL2
   23       | ExprL1 • '-' ExprL2

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 15 (ExprL0)


State 54

   16 ExprL0: ExprL0 NOT_EQ ExprL1 •
   22 ExprL1: ExprL1 • '+' ExprL2
   23       | ExprL1 • '-' ExprL2

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 16 (ExprL0)


State 55

   17 ExprL0: ExprL0 LT_OR_EQ ExprL1 •
   22 ExprL1: ExprL1 • '+' ExprL2
   23       | ExprL1 • '-' ExprL2

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 17 (ExprL0)


State 56

   18 ExprL0: ExprL0 GT_OR_EQ ExprL1 •
   22 ExprL1: ExprL1 • '+' ExprL2
   23       | ExprL1 • '-' ExprL2

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 18 (ExprL0)


State 57

   19 ExprL0: ExprL0 LT ExprL1 •
   22 ExprL1: ExprL1 • '+' ExprL2
   23       | ExprL1 • '-' ExprL2

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 19 (ExprL0)


State 58

   20 ExprL0: ExprL0 GT ExprL1 •
   22 ExprL1: ExprL1 • '+' ExprL2
   23       | ExprL1 • '-' ExprL2

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 20 (ExprL0)


State 59

   13 ExprL0: ExprL0 OR ExprL1 •
   22 ExprL1: ExprL1 • '+' ExprL2
   23       | ExprL1 • '-' ExprL2

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 13 (ExprL0)


State 60

   14 ExprL0: ExprL0 AND ExprL1 •
   22 ExprL1: ExprL1 • '+' ExprL2
   23       | ExprL1 • '-' ExprL2

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 14 (ExprL0)


State 61

    8 Stmt: Write '(' ExprL0 ')' ';' •

    $default  reduce using rule 8 (Stmt)


State 62

   22 ExprL1: ExprL1 '+' ExprL2 •
   25 ExprL2: ExprL2 • '*' ExprL3
   26       | ExprL2 • '/' ExprL3
   27       | ExprL2 • '%' ExprL3
   28       | ExprL2 • '^' ExprL3

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49
    '^'  shift, and go to state 50

    $default  reduce using rule 22 (ExprL1)


State 63

   23 ExprL1: ExprL1 '-' ExprL2 •
   25 ExprL2: ExprL2 • '*' ExprL3
   26       | ExprL2 • '/' ExprL3
   27       | ExprL2 • '%' ExprL3
   28       | ExprL2 • '^' ExprL3

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '%'  shift, and go to state 49
    '^'  shift, and go to state 50

    $default  reduce using rule 23 (ExprL1)


State 64

   25 ExprL2: ExprL2 '*' ExprL3 •

    $default  reduce using rule 25 (ExprL2)


State 65

   26 ExprL2: ExprL2 '/' ExprL3 •

    $default  reduce using rule 26 (ExprL2)


State 66

   27 ExprL2: ExprL2 '%' ExprL3 •

    $default  reduce using rule 27 (ExprL2)


State 67

   28 ExprL2: ExprL2 '^' ExprL3 •

    $default  reduce using rule 28 (ExprL2)


State 68

    9 Stmt: IF '(' ExprL0 ')' '{' • StmtSeq '}'

    Ident  shift, and go to state 7
    Write  shift, and go to state 8
    IF     shift, and go to state 9

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq     go to state 69
    Stmt        go to state 11
    AssnmtStmt  go to state 12
    Id          go to state 13


State 69

    9 Stmt: IF '(' ExprL0 ')' '{' StmtSeq • '}'

    '}'  shift, and go to state 70


State 70

    9 Stmt: IF '(' ExprL0 ')' '{' StmtSeq '}' •

    $default  reduce using rule 9 (Stmt)
