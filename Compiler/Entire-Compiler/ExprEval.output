State 44 conflicts: 1 shift/reduce
State 45 conflicts: 2 shift/reduce
State 64 conflicts: 2 shift/reduce
State 65 conflicts: 2 shift/reduce


Grammar

    0 $accept: Prog $end

    1 Prog: Declarations StmtSeq

    2 Declarations: Dec Declarations
    3             | /* empty */

    4 @1: /* empty */

    5 Dec: Int Ident @1 ';'

    6 StmtSeq: Stmt StmtSeq
    7        | /* empty */

    8 Stmt: Write '(' Expr ')' ';'
    9     | IF '(' BExpr ')' '{' StmtSeq '}'
   10     | AssnmtStmt ';'

   11 AssnmtStmt: Id '=' Expr

   12 BExpr: '!' BExpr
   13      | BExpr OR BExpr
   14      | BExpr AND BExpr
   15      | '(' BExpr ')'
   16      | Expr EQ Expr
   17      | Expr NOT_EQ Expr
   18      | Expr LT_OR_EQ Expr
   19      | Expr GT_OR_EQ Expr
   20      | Expr LT Expr
   21      | Expr GT Expr
   22      | Expr

   23 Expr: '(' Expr ')'
   24     | Expr '+' Term
   25     | Expr '-' Term
   26     | Term

   27 Term: Term '*' Factor
   28     | Term '/' Factor
   29     | Term '%' Factor
   30     | Term '^' Factor
   31     | Factor

   32 Factor: IntLit
   33       | '-' IntLit
   34       | Ident

   35 Id: Ident


Terminals, with rules where they appear

$end (0) 0
'!' (33) 12
'%' (37) 29
'(' (40) 8 9 15 23
')' (41) 8 9 15 23
'*' (42) 27
'+' (43) 24
'-' (45) 25 33
'/' (47) 28
';' (59) 5 8 10
'=' (61) 11
'^' (94) 30
'{' (123) 9
'}' (125) 9
error (256)
Ident (258) 5 34 35
IntLit (259) 32 33
Int (260) 5
Write (261) 8
IF (262) 9
EQ (263) 16
NOT_EQ (264) 17
LT_OR_EQ (265) 18
GT_OR_EQ (266) 19
LT (267) 20
GT (268) 21
OR (269) 13
AND (270) 14


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
Prog (30)
    on left: 1, on right: 0
Declarations (31)
    on left: 2 3, on right: 1 2
Dec (32)
    on left: 5, on right: 2
@1 (33)
    on left: 4, on right: 5
StmtSeq (34)
    on left: 6 7, on right: 1 6 9
Stmt (35)
    on left: 8 9 10, on right: 6
AssnmtStmt (36)
    on left: 11, on right: 10
BExpr (37)
    on left: 12 13 14 15 16 17 18 19 20 21 22, on right: 9 12 13 14
    15
Expr (38)
    on left: 23 24 25 26, on right: 8 11 16 17 18 19 20 21 22 23 24
    25
Term (39)
    on left: 27 28 29 30 31, on right: 24 25 26 27 28 29 30
Factor (40)
    on left: 32 33 34, on right: 27 28 29 30 31
Id (41)
    on left: 35, on right: 11


state 0

    0 $accept: . Prog $end

    Int  shift, and go to state 1

    $default  reduce using rule 3 (Declarations)

    Prog          go to state 2
    Declarations  go to state 3
    Dec           go to state 4


state 1

    5 Dec: Int . Ident @1 ';'

    Ident  shift, and go to state 5


state 2

    0 $accept: Prog . $end

    $end  shift, and go to state 6


state 3

    1 Prog: Declarations . StmtSeq

    Ident  shift, and go to state 7
    Write  shift, and go to state 8
    IF     shift, and go to state 9

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq     go to state 10
    Stmt        go to state 11
    AssnmtStmt  go to state 12
    Id          go to state 13


state 4

    2 Declarations: Dec . Declarations

    Int  shift, and go to state 1

    $default  reduce using rule 3 (Declarations)

    Declarations  go to state 14
    Dec           go to state 4


state 5

    5 Dec: Int Ident . @1 ';'

    $default  reduce using rule 4 (@1)

    @1  go to state 15


state 6

    0 $accept: Prog $end .

    $default  accept


state 7

   35 Id: Ident .

    $default  reduce using rule 35 (Id)


state 8

    8 Stmt: Write . '(' Expr ')' ';'

    '('  shift, and go to state 16


state 9

    9 Stmt: IF . '(' BExpr ')' '{' StmtSeq '}'

    '('  shift, and go to state 17


state 10

    1 Prog: Declarations StmtSeq .

    $default  reduce using rule 1 (Prog)


state 11

    6 StmtSeq: Stmt . StmtSeq

    Ident  shift, and go to state 7
    Write  shift, and go to state 8
    IF     shift, and go to state 9

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq     go to state 18
    Stmt        go to state 11
    AssnmtStmt  go to state 12
    Id          go to state 13


state 12

   10 Stmt: AssnmtStmt . ';'

    ';'  shift, and go to state 19


state 13

   11 AssnmtStmt: Id . '=' Expr

    '='  shift, and go to state 20


state 14

    2 Declarations: Dec Declarations .

    $default  reduce using rule 2 (Declarations)


state 15

    5 Dec: Int Ident @1 . ';'

    ';'  shift, and go to state 21


state 16

    8 Stmt: Write '(' . Expr ')' ';'

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 25

    Expr    go to state 26
    Term    go to state 27
    Factor  go to state 28


state 17

    9 Stmt: IF '(' . BExpr ')' '{' StmtSeq '}'

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 29
    '!'     shift, and go to state 30
    '-'     shift, and go to state 25

    BExpr   go to state 31
    Expr    go to state 32
    Term    go to state 27
    Factor  go to state 28


state 18

    6 StmtSeq: Stmt StmtSeq .

    $default  reduce using rule 6 (StmtSeq)


state 19

   10 Stmt: AssnmtStmt ';' .

    $default  reduce using rule 10 (Stmt)


state 20

   11 AssnmtStmt: Id '=' . Expr

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 25

    Expr    go to state 33
    Term    go to state 27
    Factor  go to state 28


state 21

    5 Dec: Int Ident @1 ';' .

    $default  reduce using rule 5 (Dec)


state 22

   34 Factor: Ident .

    $default  reduce using rule 34 (Factor)


state 23

   32 Factor: IntLit .

    $default  reduce using rule 32 (Factor)


state 24

   23 Expr: '(' . Expr ')'

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 25

    Expr    go to state 34
    Term    go to state 27
    Factor  go to state 28


state 25

   33 Factor: '-' . IntLit

    IntLit  shift, and go to state 35


state 26

    8 Stmt: Write '(' Expr . ')' ';'
   24 Expr: Expr . '+' Term
   25     | Expr . '-' Term

    ')'  shift, and go to state 36
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38


state 27

   26 Expr: Term .
   27 Term: Term . '*' Factor
   28     | Term . '/' Factor
   29     | Term . '%' Factor
   30     | Term . '^' Factor

    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '%'  shift, and go to state 41
    '^'  shift, and go to state 42

    $default  reduce using rule 26 (Expr)


state 28

   31 Term: Factor .

    $default  reduce using rule 31 (Term)


state 29

   15 BExpr: '(' . BExpr ')'
   23 Expr: '(' . Expr ')'

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 29
    '!'     shift, and go to state 30
    '-'     shift, and go to state 25

    BExpr   go to state 43
    Expr    go to state 44
    Term    go to state 27
    Factor  go to state 28


state 30

   12 BExpr: '!' . BExpr

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 29
    '!'     shift, and go to state 30
    '-'     shift, and go to state 25

    BExpr   go to state 45
    Expr    go to state 32
    Term    go to state 27
    Factor  go to state 28


state 31

    9 Stmt: IF '(' BExpr . ')' '{' StmtSeq '}'
   13 BExpr: BExpr . OR BExpr
   14      | BExpr . AND BExpr

    OR   shift, and go to state 46
    AND  shift, and go to state 47
    ')'  shift, and go to state 48


state 32

   16 BExpr: Expr . EQ Expr
   17      | Expr . NOT_EQ Expr
   18      | Expr . LT_OR_EQ Expr
   19      | Expr . GT_OR_EQ Expr
   20      | Expr . LT Expr
   21      | Expr . GT Expr
   22      | Expr .
   24 Expr: Expr . '+' Term
   25     | Expr . '-' Term

    EQ        shift, and go to state 49
    NOT_EQ    shift, and go to state 50
    LT_OR_EQ  shift, and go to state 51
    GT_OR_EQ  shift, and go to state 52
    LT        shift, and go to state 53
    GT        shift, and go to state 54
    '+'       shift, and go to state 37
    '-'       shift, and go to state 38

    $default  reduce using rule 22 (BExpr)


state 33

   11 AssnmtStmt: Id '=' Expr .
   24 Expr: Expr . '+' Term
   25     | Expr . '-' Term

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 11 (AssnmtStmt)


state 34

   23 Expr: '(' Expr . ')'
   24     | Expr . '+' Term
   25     | Expr . '-' Term

    ')'  shift, and go to state 55
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38


state 35

   33 Factor: '-' IntLit .

    $default  reduce using rule 33 (Factor)


state 36

    8 Stmt: Write '(' Expr ')' . ';'

    ';'  shift, and go to state 56


state 37

   24 Expr: Expr '+' . Term

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '-'     shift, and go to state 25

    Term    go to state 57
    Factor  go to state 28


state 38

   25 Expr: Expr '-' . Term

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '-'     shift, and go to state 25

    Term    go to state 58
    Factor  go to state 28


state 39

   27 Term: Term '*' . Factor

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '-'     shift, and go to state 25

    Factor  go to state 59


state 40

   28 Term: Term '/' . Factor

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '-'     shift, and go to state 25

    Factor  go to state 60


state 41

   29 Term: Term '%' . Factor

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '-'     shift, and go to state 25

    Factor  go to state 61


state 42

   30 Term: Term '^' . Factor

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '-'     shift, and go to state 25

    Factor  go to state 62


state 43

   13 BExpr: BExpr . OR BExpr
   14      | BExpr . AND BExpr
   15      | '(' BExpr . ')'

    OR   shift, and go to state 46
    AND  shift, and go to state 47
    ')'  shift, and go to state 63


state 44

   16 BExpr: Expr . EQ Expr
   17      | Expr . NOT_EQ Expr
   18      | Expr . LT_OR_EQ Expr
   19      | Expr . GT_OR_EQ Expr
   20      | Expr . LT Expr
   21      | Expr . GT Expr
   22      | Expr .
   23 Expr: '(' Expr . ')'
   24     | Expr . '+' Term
   25     | Expr . '-' Term

    EQ        shift, and go to state 49
    NOT_EQ    shift, and go to state 50
    LT_OR_EQ  shift, and go to state 51
    GT_OR_EQ  shift, and go to state 52
    LT        shift, and go to state 53
    GT        shift, and go to state 54
    ')'       shift, and go to state 55
    '+'       shift, and go to state 37
    '-'       shift, and go to state 38

    ')'       [reduce using rule 22 (BExpr)]
    $default  reduce using rule 22 (BExpr)


state 45

   12 BExpr: '!' BExpr .
   13      | BExpr . OR BExpr
   14      | BExpr . AND BExpr

    OR   shift, and go to state 46
    AND  shift, and go to state 47

    OR        [reduce using rule 12 (BExpr)]
    AND       [reduce using rule 12 (BExpr)]
    $default  reduce using rule 12 (BExpr)


state 46

   13 BExpr: BExpr OR . BExpr

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 29
    '!'     shift, and go to state 30
    '-'     shift, and go to state 25

    BExpr   go to state 64
    Expr    go to state 32
    Term    go to state 27
    Factor  go to state 28


state 47

   14 BExpr: BExpr AND . BExpr

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 29
    '!'     shift, and go to state 30
    '-'     shift, and go to state 25

    BExpr   go to state 65
    Expr    go to state 32
    Term    go to state 27
    Factor  go to state 28


state 48

    9 Stmt: IF '(' BExpr ')' . '{' StmtSeq '}'

    '{'  shift, and go to state 66


state 49

   16 BExpr: Expr EQ . Expr

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 25

    Expr    go to state 67
    Term    go to state 27
    Factor  go to state 28


state 50

   17 BExpr: Expr NOT_EQ . Expr

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 25

    Expr    go to state 68
    Term    go to state 27
    Factor  go to state 28


state 51

   18 BExpr: Expr LT_OR_EQ . Expr

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 25

    Expr    go to state 69
    Term    go to state 27
    Factor  go to state 28


state 52

   19 BExpr: Expr GT_OR_EQ . Expr

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 25

    Expr    go to state 70
    Term    go to state 27
    Factor  go to state 28


state 53

   20 BExpr: Expr LT . Expr

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 25

    Expr    go to state 71
    Term    go to state 27
    Factor  go to state 28


state 54

   21 BExpr: Expr GT . Expr

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 25

    Expr    go to state 72
    Term    go to state 27
    Factor  go to state 28


state 55

   23 Expr: '(' Expr ')' .

    $default  reduce using rule 23 (Expr)


state 56

    8 Stmt: Write '(' Expr ')' ';' .

    $default  reduce using rule 8 (Stmt)


state 57

   24 Expr: Expr '+' Term .
   27 Term: Term . '*' Factor
   28     | Term . '/' Factor
   29     | Term . '%' Factor
   30     | Term . '^' Factor

    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '%'  shift, and go to state 41
    '^'  shift, and go to state 42

    $default  reduce using rule 24 (Expr)


state 58

   25 Expr: Expr '-' Term .
   27 Term: Term . '*' Factor
   28     | Term . '/' Factor
   29     | Term . '%' Factor
   30     | Term . '^' Factor

    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '%'  shift, and go to state 41
    '^'  shift, and go to state 42

    $default  reduce using rule 25 (Expr)


state 59

   27 Term: Term '*' Factor .

    $default  reduce using rule 27 (Term)


state 60

   28 Term: Term '/' Factor .

    $default  reduce using rule 28 (Term)


state 61

   29 Term: Term '%' Factor .

    $default  reduce using rule 29 (Term)


state 62

   30 Term: Term '^' Factor .

    $default  reduce using rule 30 (Term)


state 63

   15 BExpr: '(' BExpr ')' .

    $default  reduce using rule 15 (BExpr)


state 64

   13 BExpr: BExpr . OR BExpr
   13      | BExpr OR BExpr .
   14      | BExpr . AND BExpr

    OR   shift, and go to state 46
    AND  shift, and go to state 47

    OR        [reduce using rule 13 (BExpr)]
    AND       [reduce using rule 13 (BExpr)]
    $default  reduce using rule 13 (BExpr)


state 65

   13 BExpr: BExpr . OR BExpr
   14      | BExpr . AND BExpr
   14      | BExpr AND BExpr .

    OR   shift, and go to state 46
    AND  shift, and go to state 47

    OR        [reduce using rule 14 (BExpr)]
    AND       [reduce using rule 14 (BExpr)]
    $default  reduce using rule 14 (BExpr)


state 66

    9 Stmt: IF '(' BExpr ')' '{' . StmtSeq '}'

    Ident  shift, and go to state 7
    Write  shift, and go to state 8
    IF     shift, and go to state 9

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq     go to state 73
    Stmt        go to state 11
    AssnmtStmt  go to state 12
    Id          go to state 13


state 67

   16 BExpr: Expr EQ Expr .
   24 Expr: Expr . '+' Term
   25     | Expr . '-' Term

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 16 (BExpr)


state 68

   17 BExpr: Expr NOT_EQ Expr .
   24 Expr: Expr . '+' Term
   25     | Expr . '-' Term

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 17 (BExpr)


state 69

   18 BExpr: Expr LT_OR_EQ Expr .
   24 Expr: Expr . '+' Term
   25     | Expr . '-' Term

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 18 (BExpr)


state 70

   19 BExpr: Expr GT_OR_EQ Expr .
   24 Expr: Expr . '+' Term
   25     | Expr . '-' Term

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 19 (BExpr)


state 71

   20 BExpr: Expr LT Expr .
   24 Expr: Expr . '+' Term
   25     | Expr . '-' Term

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 20 (BExpr)


state 72

   21 BExpr: Expr GT Expr .
   24 Expr: Expr . '+' Term
   25     | Expr . '-' Term

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 21 (BExpr)


state 73

    9 Stmt: IF '(' BExpr ')' '{' StmtSeq . '}'

    '}'  shift, and go to state 74


state 74

    9 Stmt: IF '(' BExpr ')' '{' StmtSeq '}' .

    $default  reduce using rule 9 (Stmt)
