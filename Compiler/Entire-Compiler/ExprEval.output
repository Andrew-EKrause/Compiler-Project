Grammar

    0 $accept: Prog $end

    1 Prog: Declarations StmtSeq

    2 Declarations: Dec Declarations
    3             | ε

    4 $@1: ε

    5 Dec: Int Ident $@1 ';'

    6 StmtSeq: Stmt StmtSeq
    7        | ε

    8 Stmt: Write '(' ExprL0 ')' ';'
    9     | IF '(' ExprL0 ')' '{' StmtSeq '}'
   10     | AssnmtStmt ';'

   11 AssnmtStmt: Id '=' ExprL0

   12 ExprL0: ExprL0 OR ExprL1
   13       | ExprL0 AND ExprL1
   14       | ExprL1

   15 ExprL1: '!' ExprL2
   16       | ExprL2

   17 ExprL2: ExprL2 NOT_EQ ExprL3
   18       | ExprL2 EQ ExprL3
   19       | ExprL2 LT_OR_EQ ExprL3
   20       | ExprL2 GT_OR_EQ ExprL3
   21       | ExprL2 LT ExprL3
   22       | ExprL2 GT ExprL3
   23       | ExprL3

   24 ExprL3: ExprL3 '+' ExprL4
   25       | ExprL3 '-' ExprL4
   26       | ExprL4

   27 ExprL4: ExprL4 '*' ExprL5
   28       | ExprL4 '/' ExprL5
   29       | ExprL4 '%' ExprL5
   30       | ExprL5

   31 ExprL5: ExprL6 '^' ExprL5
   32       | ExprL6

   33 ExprL6: '(' ExprL0 ')'
   34       | ExprL7

   35 ExprL7: '-' ExprL6
   36       | IntLit
   37       | Ident

   38 Id: Ident


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 15
    '%' (37) 29
    '(' (40) 8 9 33
    ')' (41) 8 9 33
    '*' (42) 27
    '+' (43) 24
    '-' (45) 25 35
    '/' (47) 28
    ';' (59) 5 8 10
    '=' (61) 11
    '^' (94) 31
    '{' (123) 9
    '}' (125) 9
    error (256)
    Ident (258) 5 37 38
    IntLit (259) 36
    Int (260) 5
    Write (261) 8
    IF (262) 9
    EQ (263) 18
    NOT_EQ (264) 17
    LT_OR_EQ (265) 19
    GT_OR_EQ (266) 20
    LT (267) 21
    GT (268) 22
    OR (269) 12
    AND (270) 13


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    Prog (30)
        on left: 1
        on right: 0
    Declarations (31)
        on left: 2 3
        on right: 1 2
    Dec (32)
        on left: 5
        on right: 2
    $@1 (33)
        on left: 4
        on right: 5
    StmtSeq <InstrSeq> (34)
        on left: 6 7
        on right: 1 6 9
    Stmt <InstrSeq> (35)
        on left: 8 9 10
        on right: 6
    AssnmtStmt <InstrSeq> (36)
        on left: 11
        on right: 10
    ExprL0 <ExprRes> (37)
        on left: 12 13 14
        on right: 8 9 11 12 13 33
    ExprL1 <ExprRes> (38)
        on left: 15 16
        on right: 12 13 14
    ExprL2 <ExprRes> (39)
        on left: 17 18 19 20 21 22 23
        on right: 15 16 17 18 19 20 21 22
    ExprL3 <ExprRes> (40)
        on left: 24 25 26
        on right: 17 18 19 20 21 22 23 24 25
    ExprL4 <ExprRes> (41)
        on left: 27 28 29 30
        on right: 24 25 26 27 28 29
    ExprL5 <ExprRes> (42)
        on left: 31 32
        on right: 27 28 29 30 31
    ExprL6 <ExprRes> (43)
        on left: 33 34
        on right: 31 32 35
    ExprL7 <ExprRes> (44)
        on left: 35 36 37
        on right: 34
    Id <string> (45)
        on left: 38
        on right: 11


State 0

    0 $accept: • Prog $end

    Int  shift, and go to state 1

    $default  reduce using rule 3 (Declarations)

    Prog          go to state 2
    Declarations  go to state 3
    Dec           go to state 4


State 1

    5 Dec: Int • Ident $@1 ';'

    Ident  shift, and go to state 5


State 2

    0 $accept: Prog • $end

    $end  shift, and go to state 6


State 3

    1 Prog: Declarations • StmtSeq

    Ident  shift, and go to state 7
    Write  shift, and go to state 8
    IF     shift, and go to state 9

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq     go to state 10
    Stmt        go to state 11
    AssnmtStmt  go to state 12
    Id          go to state 13


State 4

    2 Declarations: Dec • Declarations

    Int  shift, and go to state 1

    $default  reduce using rule 3 (Declarations)

    Declarations  go to state 14
    Dec           go to state 4


State 5

    5 Dec: Int Ident • $@1 ';'

    $default  reduce using rule 4 ($@1)

    $@1  go to state 15


State 6

    0 $accept: Prog $end •

    $default  accept


State 7

   38 Id: Ident •

    $default  reduce using rule 38 (Id)


State 8

    8 Stmt: Write • '(' ExprL0 ')' ';'

    '('  shift, and go to state 16


State 9

    9 Stmt: IF • '(' ExprL0 ')' '{' StmtSeq '}'

    '('  shift, and go to state 17


State 10

    1 Prog: Declarations StmtSeq •

    $default  reduce using rule 1 (Prog)


State 11

    6 StmtSeq: Stmt • StmtSeq

    Ident  shift, and go to state 7
    Write  shift, and go to state 8
    IF     shift, and go to state 9

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq     go to state 18
    Stmt        go to state 11
    AssnmtStmt  go to state 12
    Id          go to state 13


State 12

   10 Stmt: AssnmtStmt • ';'

    ';'  shift, and go to state 19


State 13

   11 AssnmtStmt: Id • '=' ExprL0

    '='  shift, and go to state 20


State 14

    2 Declarations: Dec Declarations •

    $default  reduce using rule 2 (Declarations)


State 15

    5 Dec: Int Ident $@1 • ';'

    ';'  shift, and go to state 21


State 16

    8 Stmt: Write '(' • ExprL0 ')' ';'

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '!'     shift, and go to state 25
    '-'     shift, and go to state 26

    ExprL0  go to state 27
    ExprL1  go to state 28
    ExprL2  go to state 29
    ExprL3  go to state 30
    ExprL4  go to state 31
    ExprL5  go to state 32
    ExprL6  go to state 33
    ExprL7  go to state 34


State 17

    9 Stmt: IF '(' • ExprL0 ')' '{' StmtSeq '}'

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '!'     shift, and go to state 25
    '-'     shift, and go to state 26

    ExprL0  go to state 35
    ExprL1  go to state 28
    ExprL2  go to state 29
    ExprL3  go to state 30
    ExprL4  go to state 31
    ExprL5  go to state 32
    ExprL6  go to state 33
    ExprL7  go to state 34


State 18

    6 StmtSeq: Stmt StmtSeq •

    $default  reduce using rule 6 (StmtSeq)


State 19

   10 Stmt: AssnmtStmt ';' •

    $default  reduce using rule 10 (Stmt)


State 20

   11 AssnmtStmt: Id '=' • ExprL0

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '!'     shift, and go to state 25
    '-'     shift, and go to state 26

    ExprL0  go to state 36
    ExprL1  go to state 28
    ExprL2  go to state 29
    ExprL3  go to state 30
    ExprL4  go to state 31
    ExprL5  go to state 32
    ExprL6  go to state 33
    ExprL7  go to state 34


State 21

    5 Dec: Int Ident $@1 ';' •

    $default  reduce using rule 5 (Dec)


State 22

   37 ExprL7: Ident •

    $default  reduce using rule 37 (ExprL7)


State 23

   36 ExprL7: IntLit •

    $default  reduce using rule 36 (ExprL7)


State 24

   33 ExprL6: '(' • ExprL0 ')'

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '!'     shift, and go to state 25
    '-'     shift, and go to state 26

    ExprL0  go to state 37
    ExprL1  go to state 28
    ExprL2  go to state 29
    ExprL3  go to state 30
    ExprL4  go to state 31
    ExprL5  go to state 32
    ExprL6  go to state 33
    ExprL7  go to state 34


State 25

   15 ExprL1: '!' • ExprL2

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL2  go to state 38
    ExprL3  go to state 30
    ExprL4  go to state 31
    ExprL5  go to state 32
    ExprL6  go to state 33
    ExprL7  go to state 34


State 26

   35 ExprL7: '-' • ExprL6

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL6  go to state 39
    ExprL7  go to state 34


State 27

    8 Stmt: Write '(' ExprL0 • ')' ';'
   12 ExprL0: ExprL0 • OR ExprL1
   13       | ExprL0 • AND ExprL1

    OR   shift, and go to state 40
    AND  shift, and go to state 41
    ')'  shift, and go to state 42


State 28

   14 ExprL0: ExprL1 •

    $default  reduce using rule 14 (ExprL0)


State 29

   16 ExprL1: ExprL2 •
   17 ExprL2: ExprL2 • NOT_EQ ExprL3
   18       | ExprL2 • EQ ExprL3
   19       | ExprL2 • LT_OR_EQ ExprL3
   20       | ExprL2 • GT_OR_EQ ExprL3
   21       | ExprL2 • LT ExprL3
   22       | ExprL2 • GT ExprL3

    EQ        shift, and go to state 43
    NOT_EQ    shift, and go to state 44
    LT_OR_EQ  shift, and go to state 45
    GT_OR_EQ  shift, and go to state 46
    LT        shift, and go to state 47
    GT        shift, and go to state 48

    $default  reduce using rule 16 (ExprL1)


State 30

   23 ExprL2: ExprL3 •
   24 ExprL3: ExprL3 • '+' ExprL4
   25       | ExprL3 • '-' ExprL4

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50

    $default  reduce using rule 23 (ExprL2)


State 31

   26 ExprL3: ExprL4 •
   27 ExprL4: ExprL4 • '*' ExprL5
   28       | ExprL4 • '/' ExprL5
   29       | ExprL4 • '%' ExprL5

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52
    '%'  shift, and go to state 53

    $default  reduce using rule 26 (ExprL3)


State 32

   30 ExprL4: ExprL5 •

    $default  reduce using rule 30 (ExprL4)


State 33

   31 ExprL5: ExprL6 • '^' ExprL5
   32       | ExprL6 •

    '^'  shift, and go to state 54

    $default  reduce using rule 32 (ExprL5)


State 34

   34 ExprL6: ExprL7 •

    $default  reduce using rule 34 (ExprL6)


State 35

    9 Stmt: IF '(' ExprL0 • ')' '{' StmtSeq '}'
   12 ExprL0: ExprL0 • OR ExprL1
   13       | ExprL0 • AND ExprL1

    OR   shift, and go to state 40
    AND  shift, and go to state 41
    ')'  shift, and go to state 55


State 36

   11 AssnmtStmt: Id '=' ExprL0 •
   12 ExprL0: ExprL0 • OR ExprL1
   13       | ExprL0 • AND ExprL1

    OR   shift, and go to state 40
    AND  shift, and go to state 41

    $default  reduce using rule 11 (AssnmtStmt)


State 37

   12 ExprL0: ExprL0 • OR ExprL1
   13       | ExprL0 • AND ExprL1
   33 ExprL6: '(' ExprL0 • ')'

    OR   shift, and go to state 40
    AND  shift, and go to state 41
    ')'  shift, and go to state 56


State 38

   15 ExprL1: '!' ExprL2 •
   17 ExprL2: ExprL2 • NOT_EQ ExprL3
   18       | ExprL2 • EQ ExprL3
   19       | ExprL2 • LT_OR_EQ ExprL3
   20       | ExprL2 • GT_OR_EQ ExprL3
   21       | ExprL2 • LT ExprL3
   22       | ExprL2 • GT ExprL3

    EQ        shift, and go to state 43
    NOT_EQ    shift, and go to state 44
    LT_OR_EQ  shift, and go to state 45
    GT_OR_EQ  shift, and go to state 46
    LT        shift, and go to state 47
    GT        shift, and go to state 48

    $default  reduce using rule 15 (ExprL1)


State 39

   35 ExprL7: '-' ExprL6 •

    $default  reduce using rule 35 (ExprL7)


State 40

   12 ExprL0: ExprL0 OR • ExprL1

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '!'     shift, and go to state 25
    '-'     shift, and go to state 26

    ExprL1  go to state 57
    ExprL2  go to state 29
    ExprL3  go to state 30
    ExprL4  go to state 31
    ExprL5  go to state 32
    ExprL6  go to state 33
    ExprL7  go to state 34


State 41

   13 ExprL0: ExprL0 AND • ExprL1

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '!'     shift, and go to state 25
    '-'     shift, and go to state 26

    ExprL1  go to state 58
    ExprL2  go to state 29
    ExprL3  go to state 30
    ExprL4  go to state 31
    ExprL5  go to state 32
    ExprL6  go to state 33
    ExprL7  go to state 34


State 42

    8 Stmt: Write '(' ExprL0 ')' • ';'

    ';'  shift, and go to state 59


State 43

   18 ExprL2: ExprL2 EQ • ExprL3

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL3  go to state 60
    ExprL4  go to state 31
    ExprL5  go to state 32
    ExprL6  go to state 33
    ExprL7  go to state 34


State 44

   17 ExprL2: ExprL2 NOT_EQ • ExprL3

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL3  go to state 61
    ExprL4  go to state 31
    ExprL5  go to state 32
    ExprL6  go to state 33
    ExprL7  go to state 34


State 45

   19 ExprL2: ExprL2 LT_OR_EQ • ExprL3

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL3  go to state 62
    ExprL4  go to state 31
    ExprL5  go to state 32
    ExprL6  go to state 33
    ExprL7  go to state 34


State 46

   20 ExprL2: ExprL2 GT_OR_EQ • ExprL3

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL3  go to state 63
    ExprL4  go to state 31
    ExprL5  go to state 32
    ExprL6  go to state 33
    ExprL7  go to state 34


State 47

   21 ExprL2: ExprL2 LT • ExprL3

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL3  go to state 64
    ExprL4  go to state 31
    ExprL5  go to state 32
    ExprL6  go to state 33
    ExprL7  go to state 34


State 48

   22 ExprL2: ExprL2 GT • ExprL3

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL3  go to state 65
    ExprL4  go to state 31
    ExprL5  go to state 32
    ExprL6  go to state 33
    ExprL7  go to state 34


State 49

   24 ExprL3: ExprL3 '+' • ExprL4

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL4  go to state 66
    ExprL5  go to state 32
    ExprL6  go to state 33
    ExprL7  go to state 34


State 50

   25 ExprL3: ExprL3 '-' • ExprL4

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL4  go to state 67
    ExprL5  go to state 32
    ExprL6  go to state 33
    ExprL7  go to state 34


State 51

   27 ExprL4: ExprL4 '*' • ExprL5

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL5  go to state 68
    ExprL6  go to state 33
    ExprL7  go to state 34


State 52

   28 ExprL4: ExprL4 '/' • ExprL5

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL5  go to state 69
    ExprL6  go to state 33
    ExprL7  go to state 34


State 53

   29 ExprL4: ExprL4 '%' • ExprL5

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL5  go to state 70
    ExprL6  go to state 33
    ExprL7  go to state 34


State 54

   31 ExprL5: ExprL6 '^' • ExprL5

    Ident   shift, and go to state 22
    IntLit  shift, and go to state 23
    '('     shift, and go to state 24
    '-'     shift, and go to state 26

    ExprL5  go to state 71
    ExprL6  go to state 33
    ExprL7  go to state 34


State 55

    9 Stmt: IF '(' ExprL0 ')' • '{' StmtSeq '}'

    '{'  shift, and go to state 72


State 56

   33 ExprL6: '(' ExprL0 ')' •

    $default  reduce using rule 33 (ExprL6)


State 57

   12 ExprL0: ExprL0 OR ExprL1 •

    $default  reduce using rule 12 (ExprL0)


State 58

   13 ExprL0: ExprL0 AND ExprL1 •

    $default  reduce using rule 13 (ExprL0)


State 59

    8 Stmt: Write '(' ExprL0 ')' ';' •

    $default  reduce using rule 8 (Stmt)


State 60

   18 ExprL2: ExprL2 EQ ExprL3 •
   24 ExprL3: ExprL3 • '+' ExprL4
   25       | ExprL3 • '-' ExprL4

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50

    $default  reduce using rule 18 (ExprL2)


State 61

   17 ExprL2: ExprL2 NOT_EQ ExprL3 •
   24 ExprL3: ExprL3 • '+' ExprL4
   25       | ExprL3 • '-' ExprL4

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50

    $default  reduce using rule 17 (ExprL2)


State 62

   19 ExprL2: ExprL2 LT_OR_EQ ExprL3 •
   24 ExprL3: ExprL3 • '+' ExprL4
   25       | ExprL3 • '-' ExprL4

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50

    $default  reduce using rule 19 (ExprL2)


State 63

   20 ExprL2: ExprL2 GT_OR_EQ ExprL3 •
   24 ExprL3: ExprL3 • '+' ExprL4
   25       | ExprL3 • '-' ExprL4

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50

    $default  reduce using rule 20 (ExprL2)


State 64

   21 ExprL2: ExprL2 LT ExprL3 •
   24 ExprL3: ExprL3 • '+' ExprL4
   25       | ExprL3 • '-' ExprL4

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50

    $default  reduce using rule 21 (ExprL2)


State 65

   22 ExprL2: ExprL2 GT ExprL3 •
   24 ExprL3: ExprL3 • '+' ExprL4
   25       | ExprL3 • '-' ExprL4

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50

    $default  reduce using rule 22 (ExprL2)


State 66

   24 ExprL3: ExprL3 '+' ExprL4 •
   27 ExprL4: ExprL4 • '*' ExprL5
   28       | ExprL4 • '/' ExprL5
   29       | ExprL4 • '%' ExprL5

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52
    '%'  shift, and go to state 53

    $default  reduce using rule 24 (ExprL3)


State 67

   25 ExprL3: ExprL3 '-' ExprL4 •
   27 ExprL4: ExprL4 • '*' ExprL5
   28       | ExprL4 • '/' ExprL5
   29       | ExprL4 • '%' ExprL5

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52
    '%'  shift, and go to state 53

    $default  reduce using rule 25 (ExprL3)


State 68

   27 ExprL4: ExprL4 '*' ExprL5 •

    $default  reduce using rule 27 (ExprL4)


State 69

   28 ExprL4: ExprL4 '/' ExprL5 •

    $default  reduce using rule 28 (ExprL4)


State 70

   29 ExprL4: ExprL4 '%' ExprL5 •

    $default  reduce using rule 29 (ExprL4)


State 71

   31 ExprL5: ExprL6 '^' ExprL5 •

    $default  reduce using rule 31 (ExprL5)


State 72

    9 Stmt: IF '(' ExprL0 ')' '{' • StmtSeq '}'

    Ident  shift, and go to state 7
    Write  shift, and go to state 8
    IF     shift, and go to state 9

    $default  reduce using rule 7 (StmtSeq)

    StmtSeq     go to state 73
    Stmt        go to state 11
    AssnmtStmt  go to state 12
    Id          go to state 13


State 73

    9 Stmt: IF '(' ExprL0 ')' '{' StmtSeq • '}'

    '}'  shift, and go to state 74


State 74

    9 Stmt: IF '(' ExprL0 ')' '{' StmtSeq '}' •

    $default  reduce using rule 9 (Stmt)
